import{_ as l,c as i,a as s,b as e,d as t,e as r,r as a,o as u}from"./app-BDAgxtHV.js";const p={},d={href:"https://cloudnative.to/blog/develop-a-csi-driver/",target:"_blank",rel:"noopener noreferrer"},c={href:"https://realjf.io/k8s/k8s-csi-plugin-in-action/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://blog.csdn.net/weixin_39833509/article/details/127233382",target:"_blank",rel:"noopener noreferrer"},g={href:"https://blog.csdn.net/BY_imba/article/details/128490582",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/ceph/ceph-csi",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/container-storage-interface/spec/blob/master/spec.md",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.cloudnative101.net/posts/storage-101-csi-driver-challenges-solutions/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://kubesphere.io/zh/conferences/csi/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/kubernetes-csi/csi-driver-host-path",target:"_blank",rel:"noopener noreferrer"},_={href:"https://mritd.com/2020/08/19/how-to-write-a-csi-driver-for-kubernetes/",target:"_blank",rel:"noopener noreferrer"},S={href:"https://kubernetes-csi.github.io/docs/livenessprobe.html",target:"_blank",rel:"noopener noreferrer"},C={href:"https://www.nenufm.com/dorthl/291/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://blog.csdn.net/weixin_43696211/article/details/90297342?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-4-90297342-blog-125295928.235%5Ev43%5Epc_blog_bottom_relevance_base3&spm=1001.2101.3001.4242.3&utm_relevant_index=7",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/openebs-archive/device-localpv",target:"_blank",rel:"noopener noreferrer"},I={href:"https://www.qikqiak.com/k8strain/storage/local/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.cnblogs.com/BlueMountain-HaggenDazs/p/18152502",target:"_blank",rel:"noopener noreferrer"};function K(q,n){const o=a("ExternalLinkIcon");return u(),i("div",null,[n[17]||(n[17]=s('<h2 id="实践记录" tabindex="-1"><a class="header-anchor" href="#实践记录"><span>实践记录</span></a></h2><h3 id="sc-的卷绑定模式-volumebindingmode" tabindex="-1"><a class="header-anchor" href="#sc-的卷绑定模式-volumebindingmode"><span>sc 的卷绑定模式 volumeBindingMode</span></a></h3><p>卷绑定模式：Immediate、WaitForFirstConsumer。卷绑定指的是 PersistentVolume 在什么时候产生</p><ul><li>Immediate：立即绑定，一旦 pvc 创建，pv 也就产生</li><li>WaitForFirstConsumer：等待第一个消费者，当 pvc 被绑定到 pod 上时，pv 才会产生</li></ul><h3 id="卷挂载的配置-mountpropagation" tabindex="-1"><a class="header-anchor" href="#卷挂载的配置-mountpropagation"><span>卷挂载的配置 mountPropagation</span></a></h3><p><code>mountPropagation: &quot;Bidirectional&quot;</code> 是 Kubernetes 中 Volume 的一个属性，用于指定挂载的传播方式。当设置为 &quot;Bidirectional&quot; 时，表示挂载的传播方向是双向的。</p><p>具体而言，当一个 Volume 被设置为双向传播时，这意味着在容器内对该 Volume 的挂载操作会同时影响到此 Volume 在容器之间的传播，以及该 Volume 在容器和宿主机之间的传播。这样一来，容器内对该 Volume 的挂载操作会被传播到其他容器，同时也会被传播到宿主机上。</p><p>使用双向传播的挂载选项可以实现容器间和容器与宿主机之间的挂载同步，使得对 Volume 的挂载操作在整个容器集群中都能够保持一致。</p><p>需要注意的是，并非所有的 Volume 类型都支持双向传播，因此在使用时需要注意该 Volume 类型是否支持这一特性。</p><p>在 Kubernetes 中，如果不显式地配置 Volume 的 <code>mountPropagation</code> 属性，默认情况下挂载传播的模式是 <code>None</code>，即不进行挂载的传播。</p><p>在 <code>mountPropagation: &quot;None&quot;</code> 的模式下，对 Volume 的挂载操作不会传播到其他容器，也不会传播到宿主机上，每个容器都将独立管理其自己的挂载。这意味着在不进行显式配置的情况下，默认情况下 Volume 的挂载操作只会影响到当前的容器，不会影响到其他容器或宿主机。</p><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2>',12)),e("ol",null,[e("li",null,[e("p",null,[e("a",d,[n[0]||(n[0]=t("CSI 驱动开发指南 | 云原生社区（中国）")),r(o)])])]),e("li",null,[e("p",null,[e("a",c,[n[1]||(n[1]=t("K8s CSI插件开发实战 K8s CSI Plugin Development in Action // Realjf's blog")),r(o)])])]),e("li",null,[e("p",null,[e("a",m,[n[2]||(n[2]=t("unexpected error getting claim reference: selfLink was empty, can‘t make reference-CSDN博客")),r(o)])])]),e("li",null,[e("p",null,[e("a",g,[n[3]||(n[3]=t("openEuler 部署Kubernetes（K8s）集群_《openeuler kubernetes 集群部署指南》-CSDN博客")),r(o)])])]),e("li",null,[e("p",null,[e("a",b,[n[4]||(n[4]=t("GitHub - ceph/ceph-csi: CSI driver for Ceph")),r(o)])])]),e("li",null,[e("p",null,[e("a",h,[n[5]||(n[5]=t("spec/spec.md at master · container-storage-interface/spec · GitHub")),r(o)])])]),e("li",null,[e("p",null,[e("a",f,[n[6]||(n[6]=t("Kubernetes Storage 101: 浅析 CSI Driver 实践中的挑战与解决方案 · Cloud Native 101")),r(o)])])]),e("li",null,[e("p",null,[e("a",v,[n[7]||(n[7]=t("基于 CSI Kubernetes 存储插件的开发实践")),r(o)])])]),e("li",null,[e("p",null,[e("a",k,[n[8]||(n[8]=t("GitHub - kubernetes-csi/csi-driver-host-path: A sample (non-production) CSI Driver that creates a local directory as a volume on a single node")),r(o)])])]),e("li",null,[e("p",null,[e("a",_,[n[9]||(n[9]=t("如何编写 CSI 插件 - Kovacs")),r(o)])])]),e("li",null,[e("p",null,[e("a",S,[n[10]||(n[10]=t("livenessprobe - Kubernetes CSI Developer Documentation")),r(o)])])]),e("li",null,[e("p",null,[e("a",C,[n[11]||(n[11]=t("gcr.io，ghcr.io，k8s.gcr.io，quay.io 国内镜像加速服务整理分享 – 留声与视")),r(o)])])]),e("li",null,[e("p",null,[e("a",w,[n[12]||(n[12]=t("SmartX 超融合 SMTX OS 分布式块存储 Kubernetes CSI 实现解析_分布式csi标准-CSDN博客")),r(o)])])]),e("li",null,[e("p",null,[e("a",V,[n[13]||(n[13]=t("GitHub - openebs-archive/device-localpv: CSI Driver for using Local Block Devices")),r(o)])])]),e("li",null,[e("p",null,[e("a",I,[n[14]||(n[14]=t("Local 本地存储 - K8S训练营")),r(o)])])]),n[16]||(n[16]=e("li",null,[e("p",null,"https://kubernetes.io/zh-cn/docs/concepts/storage/volumes")],-1)),e("li",null,[e("p",null,[e("a",x,[n[15]||(n[15]=t("《深入剖析 Kubernetes》容器持久化存储 —— 小记随笔 - Blue Mountain - 博客园")),r(o)])])])])])}const D=l(p,[["render",K],["__file","csi.html.vue"]]),N=JSON.parse('{"path":"/blogs/gongzuo/2025/csi.html","title":"csi","lang":"en-US","frontmatter":{"title":"csi","date":"2024/11/19","tags":["csi","Kubernetes"],"categories":["工作"]},"headers":[{"level":2,"title":"实践记录","slug":"实践记录","link":"#实践记录","children":[{"level":3,"title":"sc 的卷绑定模式 volumeBindingMode","slug":"sc-的卷绑定模式-volumebindingmode","link":"#sc-的卷绑定模式-volumebindingmode","children":[]},{"level":3,"title":"卷挂载的配置 mountPropagation","slug":"卷挂载的配置-mountpropagation","link":"#卷挂载的配置-mountpropagation","children":[]}]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1739425323000,"updatedTime":1739425323000,"contributors":[{"name":"洪惠强","email":"904566722@qq.com","commits":1}]},"filePathRelative":"blogs/工作/2025/csi.md"}');export{D as comp,N as data};
